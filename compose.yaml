services:
  db:
    restart: always
    image: postgres:16.4
    container_name: db
    ports:
      - ${DATABASE_PORT}:${DATABASE_PORT}
    env_file:
      - ./.env.public
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./init/db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: [ "CMD-SHELL", "psql -U ${POSTGRES_USER} -d ${POSTGRES_DB} -c 'SELECT 1' || exit 1" ]
      interval: 10s
      timeout: 5s
      retries: 3

  redis:
    restart: always
    image: redis:8.2.2
    container_name: redis
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    env_file:
      - ./.env.public
    command: redis-server --requirepass ${REDIS_PASSWORD}
    volumes:
      - ./redis_data:/data
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  keycloak:
    restart: always
    image: quay.io/keycloak/keycloak:26.3.0
    container_name: keycloak
    command: start
    ports:
      - ${KC_PORT}:${KC_PORT}
    env_file:
      - ./.env.public
    volumes:
      - ./certs/???:/opt/keycloak/conf/certs:ro
    depends_on:
      - db
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://${KC_HOSTNAME}:${KC_PORT}/auth/realms/master" ]
      interval: 10s
      timeout: 5s
      retries: 3

  rabbitmq:
    restart: always
    image: rabbitmq:4.1.4-management
    container_name: rabbitmq
    hostname: rabbitmq
    ports:
      - ${RABBITMQ_PORT}:${RABBITMQ_PORT}
      - ${RABBITMQ_WEBCLIENT_PORT}:${RABBITMQ_WEBCLIENT_PORT}
    env_file:
      - ./.env.public
    volumes:
      - ./rabbitmq_data:/var/lib/rabbitmq/
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

volumes:
  db_data:
    driver: local
  init:
    driver: local
  redis_data:
    driver: local
  certs:
    driver: local
  rabbitmq_data:
    driver: local
