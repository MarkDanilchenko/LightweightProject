import {
  BaseEntity,
  Column,
  CreateDateColumn,
  Entity,
  Index,
  ManyToOne,
  PrimaryGeneratedColumn,
  UpdateDateColumn,
} from "typeorm";
import UserEntity from "@server/user/user.entity";

@Entity({ name: "authentications" })
@Index(["userId", "provider"], { unique: true })
export default class AuthenticationEntity extends BaseEntity {
  @PrimaryGeneratedColumn("uuid")
  id: string;

  @Column({ type: "uuid" })
  userId: string;

  @Column({ type: "varchar" })
  provider: string;

  /**
   * The refresh token generated by the web service.
   */
  @Column({ type: "varchar", nullable: true })
  refreshToken?: string | null;

  /**
   * The user's password if the authentication provider is "local".
   */
  @Column({ type: "varchar", nullable: true })
  password?: string | null;

  @CreateDateColumn({ type: "timestamptz" })
  createdAt: Date;

  @UpdateDateColumn({ type: "timestamptz" })
  lastAccessedAt: Date;

  @ManyToOne(() => UserEntity, (user) => user.authentications)
  user: UserEntity;
}
